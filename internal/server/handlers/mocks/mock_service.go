// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Pro100x3mal/go-musthave-metrics/internal/server/handlers (interfaces: MetricsServiceInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/Pro100x3mal/go-musthave-metrics/internal/server/models"
	gomock "github.com/golang/mock/gomock"
)

// MockMetricsServiceInterface is a mock of MetricsServiceInterface interface.
type MockMetricsServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsServiceInterfaceMockRecorder
}

// MockMetricsServiceInterfaceMockRecorder is the mock recorder for MockMetricsServiceInterface.
type MockMetricsServiceInterfaceMockRecorder struct {
	mock *MockMetricsServiceInterface
}

// NewMockMetricsServiceInterface creates a new mock instance.
func NewMockMetricsServiceInterface(ctrl *gomock.Controller) *MockMetricsServiceInterface {
	mock := &MockMetricsServiceInterface{ctrl: ctrl}
	mock.recorder = &MockMetricsServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsServiceInterface) EXPECT() *MockMetricsServiceInterfaceMockRecorder {
	return m.recorder
}

// GetAllMetrics mocks base method.
func (m *MockMetricsServiceInterface) GetAllMetrics(arg0 context.Context) (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllMetrics", arg0)
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllMetrics indicates an expected call of GetAllMetrics.
func (mr *MockMetricsServiceInterfaceMockRecorder) GetAllMetrics(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllMetrics", reflect.TypeOf((*MockMetricsServiceInterface)(nil).GetAllMetrics), arg0)
}

// GetJSONMetricValue mocks base method.
func (m *MockMetricsServiceInterface) GetJSONMetricValue(arg0 context.Context, arg1 *models.Metrics) (*models.Metrics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJSONMetricValue", arg0, arg1)
	ret0, _ := ret[0].(*models.Metrics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJSONMetricValue indicates an expected call of GetJSONMetricValue.
func (mr *MockMetricsServiceInterfaceMockRecorder) GetJSONMetricValue(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJSONMetricValue", reflect.TypeOf((*MockMetricsServiceInterface)(nil).GetJSONMetricValue), arg0, arg1)
}

// GetMetricValue mocks base method.
func (m *MockMetricsServiceInterface) GetMetricValue(arg0 context.Context, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetricValue", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMetricValue indicates an expected call of GetMetricValue.
func (mr *MockMetricsServiceInterfaceMockRecorder) GetMetricValue(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetricValue", reflect.TypeOf((*MockMetricsServiceInterface)(nil).GetMetricValue), arg0, arg1, arg2)
}

// PingCheck mocks base method.
func (m *MockMetricsServiceInterface) PingCheck(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PingCheck", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// PingCheck indicates an expected call of PingCheck.
func (mr *MockMetricsServiceInterfaceMockRecorder) PingCheck(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PingCheck", reflect.TypeOf((*MockMetricsServiceInterface)(nil).PingCheck), arg0)
}

// UpdateJSONMetric mocks base method.
func (m *MockMetricsServiceInterface) UpdateJSONMetric(arg0 context.Context, arg1 *models.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateJSONMetric", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateJSONMetric indicates an expected call of UpdateJSONMetric.
func (mr *MockMetricsServiceInterfaceMockRecorder) UpdateJSONMetric(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateJSONMetric", reflect.TypeOf((*MockMetricsServiceInterface)(nil).UpdateJSONMetric), arg0, arg1)
}

// UpdateJSONMetrics mocks base method.
func (m *MockMetricsServiceInterface) UpdateJSONMetrics(arg0 context.Context, arg1 []models.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateJSONMetrics", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateJSONMetrics indicates an expected call of UpdateJSONMetrics.
func (mr *MockMetricsServiceInterfaceMockRecorder) UpdateJSONMetrics(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateJSONMetrics", reflect.TypeOf((*MockMetricsServiceInterface)(nil).UpdateJSONMetrics), arg0, arg1)
}

// UpdateMetricFromParams mocks base method.
func (m *MockMetricsServiceInterface) UpdateMetricFromParams(arg0 context.Context, arg1, arg2, arg3 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMetricFromParams", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateMetricFromParams indicates an expected call of UpdateMetricFromParams.
func (mr *MockMetricsServiceInterfaceMockRecorder) UpdateMetricFromParams(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMetricFromParams", reflect.TypeOf((*MockMetricsServiceInterface)(nil).UpdateMetricFromParams), arg0, arg1, arg2, arg3)
}
